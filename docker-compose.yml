version: "3.9"

# docker-compose.yml (base) — apenas vazio/local para evitar sobrescrever produção
# As configurações de verdade estão no docker-compose.override.yml
services: {}



# version: "3.9"

# # ----------------------------------
# # COMPOSE – NECESSITO (PRODUÇÃO)
# # ----------------------------------
# services:
#   web_prod:
#     build: .
#     #container_name: necessito_web_prod
#     command: >
#       gunicorn core.wsgi:application
#       --workers 4
#       --bind 0.0.0.0:8000
#       --log-file /app/logs/gunicorn.log
#     env_file:
#       - ./env/.env_prod        # ← env producao
#     volumes:
#       - .:/app
#       - static_volume_prod:/app/staticfiles   # coletados via collectstatic
#       - media_volume_prod:/app/media
#       - logs_volume_prod:/app/logs
#     expose:
#       - "8000"
#     depends_on:
#       - db_prod
#     restart: always
#     networks:
#       - app_network_prod

#   db_prod:
#     image: postgres:17
#     #container_name: necessito_db_prod
#     env_file:
#       - ./env/.env_prod        # usa POSTGRES_* ou DB_* se mantiver
#     volumes:
#       - pgdata_prod:/var/lib/postgresql/data
#     restart: always
#     networks:
#       - app_network_prod
#     ports:
#        - "5432:5432"

#   nginx_prod:
#     image: nginx:1.25-alpine
#     #container_name: necessito_nginx_prod
#     volumes:
#       - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
#       - static_volume_prod:/app/staticfiles:ro
#       - media_volume_prod:/app/media:ro
#     ports:
#       - "80:80"
#     depends_on:
#       - web_prod
#     restart: always
#     networks:
#       - app_network_prod

# # ---------------- Volumes persistentes ---------------
# volumes:
#   pgdata_prod:
#   static_volume_prod:
#   media_volume_prod:
#   logs_volume_prod:

# # ---------------- Rede dedicada ----------------------
# networks:
#   app_network_prod:
#     driver: bridge